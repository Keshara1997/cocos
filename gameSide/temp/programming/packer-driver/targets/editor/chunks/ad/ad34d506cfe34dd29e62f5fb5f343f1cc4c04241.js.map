{"version":3,"sources":["file:///C:/Users/User/Documents/CocosGame/CoCos-Game-Login/login/assets/Script/loginScearnMgr.ts"],"names":["_decorator","Component","director","EditBox","Node","WebSocketManager","ccclass","property","loginScearnMgr","_webSocketManager","start","console","log","getInstance","connectToServer","eventTarget","on","onLoginSuccess","update","deltaTime","onClickSignUp","loadScene","onClickLogin","userName","my_EditBox","getComponent","string","password","my_EditBox2","isConnected","sendMessage","error","data","success","user","globalThis","_userInfo","userId","userHeadUrl","userRoomCards","message","onDestroy","off"],"mappings":"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","sourcesContent":["import { _decorator, Component, director, EditBox, Node } from 'cc';\nimport { WebSocketManager } from './webSocket/WebSocketManager';\nimport { userInfo } from './userInfo';\nconst { ccclass, property } = _decorator;\n\n@ccclass('loginScearnMgr')\nexport class loginScearnMgr extends Component {\n\n    @property(Node)\n    public my_EditBox: Node\n\n    @property(Node)\n    public my_EditBox2: Node\n\n    private _webSocketManager: WebSocketManager = null;\n\n    start() {\n\n        console.log(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\");\n\n        // Initialize WebSocketManager and connect to server\n        this._webSocketManager = WebSocketManager.getInstance();\n        this._webSocketManager.connectToServer();\n\n        // Listen for login response events\n        this._webSocketManager.eventTarget.on(\"loginResponse\", this.onLoginSuccess, this);\n\n    }\n\n    update(deltaTime: number) {\n\n    }\n\n\n\n    public onClickSignUp() {\n        console.log(\"onClickSignUp55\")\n        director.loadScene(\"SignUp\");\n    }\n\n    public onClickLogin() {\n        let userName = this.my_EditBox.getComponent(EditBox).string\n        let password = this.my_EditBox2.getComponent(EditBox).string\n        console.log(\"onClickLogin\", userName);\n\n        // Use WebSocketManager directly instead of going through loginClient\n        if (this._webSocketManager && this._webSocketManager.isConnected()) { \n            this._webSocketManager.sendMessage(\"login\", { userName: userName, password: password });\n        } else {\n            console.error(\"WebSocket is not connected. Cannot send login message.\");\n            // Try to reconnect\n            this._webSocketManager.connectToServer();\n        }\n    }\n\n    public onLoginSuccess(data: any) {\n        console.log(\"onLoginSuccess\", data);\n\n        if (data.success && data.user) {\n            if (globalThis._userInfo) {\n                globalThis._userInfo.userId = data.user.userId;\n                globalThis._userInfo.userName = data.user.userName;\n                globalThis._userInfo.userHeadUrl = data.user.userHeadUrl;\n                globalThis._userInfo.userRoomCards = data.user.userRoomCards;\n            }\n\n            director.loadScene(\"Level1\");\n        } else {\n            console.error(\"Login999 failed:\", data.message || \"Unknown error\");\n            // You might want to show an error message to the user here\n        }\n    }\n\n    // Cleanup when component is destroyed\n    onDestroy() {\n        if (this._webSocketManager) {\n            this._webSocketManager.eventTarget.off(\"loginResponse\", this.onLoginSuccess, this);\n        }\n        if (globalThis.eventTarget) {\n            globalThis.eventTarget.off(\"login_success\", this.onLoginSuccess, this);\n        }\n    }\n}\n\n\n"]}
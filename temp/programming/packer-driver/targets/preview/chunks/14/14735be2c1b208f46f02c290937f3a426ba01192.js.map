{"version":3,"sources":["file:///C:/Users/User/Documents/CocosGame/CoCos-Game-Login/login/assets/Script/loginClient.ts"],"names":[],"mappings":"AAAA;AACA;AAIA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAMA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA","sourcesContent":["// import { _decorator, Component, Node, EventTarget } from 'cc';\n// const { ccclass, property } = _decorator;\n\n\n\n// const eventTarget = new EventTarget();\n// globalThis.eventTarget = eventTarget;\n\n// eventTarget.on(\"login_success\", (data) => {\n//     console.log(\"Login successful:\", data);\n// });\n\n// @ccclass('loginClient')\n// export class loginClient extends Component {\n\n//     private _ws: any = null;\n\n\n\n\n\n//     start() {\n//         this._init();\n//         console.log(\"loginClient start\");\n//     }\n\n//     update(deltaTime: number) {\n\n//     }\n\n//     private _init() {\n//         this._connectToServer();\n//         console.log(\"loginClient init\");\n//     }\n\n\n//     private _connectToServer() {\n\n//         const ws = new WebSocket(\"ws://127.0.0.1:3000\", \"echo-protocol\");\n\n//         this._ws = ws;\n//         globalThis._loginScearnMgr = this;\n\n//         ws.onopen = () => {\n//             console.log(\"WebSocket connection opened\");\n//             // ws.send('{\"type\":\"login\",\"username\":\"testUser\",\"password\":\"testPass\"}');\n\n//         }\n\n//         ws.onmessage = (result) => {\n//             console.log(\"Received message from server:\", result.data);\n\n//             console.log('result', result);\n\n//             // Parse the incoming message\n//             let message: { type: string, user: any } = JSON.parse(result.data);\n\n//             // let type = JSON.parse(result.data).type;\n//             // let data = JSON.parse(result.data).data;\n\n//             console.log('message', message);\n//             console.log(\"Parsed type:\", message.type, \"data:\", message.user);\n\n\n\n\n//             this.responseServerMessage(message.type, message);\n//         }\n\n//         ws.onclose = () => {\n//             console.log(\"WebSocket connection closed\");\n//         }\n//         ws.onerror = (error) => {\n//             console.error(\"WebSocket error:\", error);\n//         }\n\n//     }\n\n\n//     public responseServerMessage(type, message) {\n//         console.log('response type:', type);\n//         console.log('success:', message.success);\n//         console.log(\"Response from server:\", message);\n\n//         if (type === \"loginResponse\" && message.success) {\n//             globalThis.eventTarget.emit(\"login_success\", message);\n//         }\n\n//         globalThis.eventTarget.emit(type, message);\n//     }\n\n\n\n//     private _sendMessage(type: string, data: any) {\n//         if (this._ws && this._ws.readyState === WebSocket.OPEN) {\n//             const message = JSON.stringify({ type, data });\n//             this._ws.send(message);\n//             console.log(\"Sent message to server:\", message);\n//         } else {\n//             console.error(\"WebSocket is not open. Cannot send message.\");\n//         }\n\n\n//     }\n// }\n\n"]}
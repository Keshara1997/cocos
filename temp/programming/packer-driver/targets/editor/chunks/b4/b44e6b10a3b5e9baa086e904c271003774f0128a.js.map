{"version":3,"sources":["file:///C:/Users/User/Documents/CocosGame/CoCos-Game-Login/login/assets/scripts/controllers/BombExplosion.ts"],"names":["_decorator","Collider2D","Component","Node","ERigidBody2DType","Vec2","Contact2DType","ccclass","property","BombExplosion","start","collider","getComponent","on","BEGIN_CONTACT","onBeginContact","END_CONTACT","onEndContact","console","warn","update","deltaTime","selfCollider","otherCollider","body","type","Dynamic","node","Bomb_Root","otherPosition","getPosition","selfPosition","forceVector","subtract","normalize","multiplyScalar","forceVector2D","x","y","applyForceToCenter","contact"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAmBC,MAAAA,gB,OAAAA,gB;AAAkBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,a,OAAAA,a;;;;;;;;;OACjF;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;+BAGjBS,a,WADZF,OAAO,CAAC,eAAD,C,UAKHC,QAAQ,CAACL,IAAD,C,2BALb,MACaM,aADb,SACmCP,SADnC,CAC6C;AAAA;AAAA;;AAAA;AAAA;;AAOzCQ,QAAAA,KAAK,GAAG;AACH,gBAAMC,QAAQ,GAAG,KAAKC,YAAL,CAAkBX,UAAlB,CAAjB;;AACD,cAAIU,QAAJ,EAAc;AACRA,YAAAA,QAAQ,CAACE,EAAT,CAAYP,aAAa,CAACQ,aAA1B,EAAyC,KAAKC,cAA9C,EAA8D,IAA9D;AACAJ,YAAAA,QAAQ,CAACE,EAAT,CAAYP,aAAa,CAACU,WAA1B,EAAuC,KAAKC,YAA5C,EAA0D,IAA1D;AACD,WAHL,MAGW;AACLC,YAAAA,OAAO,CAACC,IAAR,CAAa,+CAAb;AACD;AAER;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB,CApBwC,CAwBvC;;;AACAN,QAAAA,cAAc,CAACO,YAAD,EAA2BC,aAA3B,EAAsD;AAElE,cAAIA,aAAa,CAACC,IAAd,CAAmBC,IAAnB,KAA4BrB,gBAAgB,CAACsB,OAA7C,IAAwDH,aAAa,CAACI,IAAd,KAAuB,KAAKC,SAAxF,EAAoG;AAEhG,gBAAIC,aAAa,GAAEN,aAAa,CAACI,IAAd,CAAmBG,WAAnB,EAAnB,CAFgG,CAE5C;;AACpD,gBAAIC,YAAY,GAAG,KAAKH,SAAL,CAAeE,WAAf,EAAnB,CAHgG,CAGhD;;AAEhD,gBAAIE,WAAW,GAAGH,aAAa,CAACI,QAAd,CAAuBF,YAAvB,EAAqCG,SAArC,GAAiDC,cAAjD,CAAgE,IAAhE,CAAlB,CALgG,CAKP;;AAEzFH,YAAAA,WAAW,GAAGA,WAAW,CAACE,SAAZ,EAAd,CAPgG,CAOzD;;AAEvCF,YAAAA,WAAW,GAAGA,WAAW,CAACG,cAAZ,CAA2B,IAA3B,CAAd,CATgG,CAShD;AAEhD;;AACA,kBAAMC,aAAa,GAAG,IAAI/B,IAAJ,CAAS2B,WAAW,CAACK,CAArB,EAAwBL,WAAW,CAACM,CAApC,CAAtB;AAEAf,YAAAA,aAAa,CAACC,IAAd,CAAmBe,kBAAnB,CAAsCH,aAAtC,EAAqD,IAArD,EAdgG,CAcpC;AAG/D;AACF;;AAGOnB,QAAAA,YAAY,CAChBK,YADgB,EAEhBC,aAFgB,EAGhBiB,OAHgB,EAIhB,CAGD;;AAvDoC,O;;;;;iBAKhB,I","sourcesContent":["import { _decorator, Collider2D, Component, Node, RigidBody2D, ERigidBody2DType, Vec2, Contact2DType, IPhysics2DContact } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('BombExplosion')\r\nexport class BombExplosion extends Component {\r\n\r\n\r\n\r\n    @property(Node)\r\n    Bomb_Root: Node | null = null;\r\n\r\n    start() {\r\n         const collider = this.getComponent(Collider2D);\r\n        if (collider) {\r\n              collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n              collider.on(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n            } else {\r\n              console.warn(\"PlayerController: no Collider2D found on node\");\r\n            }\r\n\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n\r\n\r\n\r\n      // Collision detection for ground\r\n      onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D) {\r\n\r\n        if (otherCollider.body.type === ERigidBody2DType.Dynamic && otherCollider.node !== this.Bomb_Root ) {\r\n\r\n            let otherPosition= otherCollider.node.getPosition();// Get the position of the other collider node\r\n            let selfPosition = this.Bomb_Root.getPosition();// Get the position of the bomb explosion root(bomb position) node\r\n\r\n            let forceVector = otherPosition.subtract(selfPosition).normalize().multiplyScalar(1000); // Calculate force vector away from explosion center\r\n\r\n            forceVector = forceVector.normalize(); // Normalize the force vector\r\n\r\n            forceVector = forceVector.multiplyScalar(1000); // Scale the force vector to desired strength\r\n\r\n            // Convert Vec3 to Vec2 for applyForceToCenter\r\n            const forceVector2D = new Vec2(forceVector.x, forceVector.y);\r\n\r\n            otherCollider.body.applyForceToCenter(forceVector2D, true); // Apply force to the other collider's rigid body\r\n\r\n          \r\n        }\r\n      }\r\n    \r\n\r\n      private onEndContact(\r\n          selfCollider: Collider2D,\r\n          otherCollider: Collider2D,\r\n          contact: IPhysics2DContact\r\n        ) {\r\n\r\n         \r\n        }\r\n}\r\n\r\n\r\n"]}